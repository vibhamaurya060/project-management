// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  role     Role     @default(TEAM_MEMBER)
}

enum Role {
  ADMIN
  PROJECT_MANAGER
  TEAM_MEMBER
}

model Project {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  deadline    DateTime
  createdBy   Int
  creator     User     @relation(fields: [createdBy], references: [id])
  tasks       Task[]
  createdAt   DateTime @default(now())
}

model Task {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  status      Status  @default(TODO)
  assignedTo  Int
  user        User     @relation(fields: [assignedTo], references: [id])
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id])
  dueDate     DateTime
  comments    Comment[]
  attachments Attachment[]
  createdAt   DateTime @default(now())
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}

model Comment {
  id      Int     @id @default(autoincrement())
  content String
  taskId  Int
  task    Task    @relation(fields: [taskId], references: [id])
  userId  Int
  user    User    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Attachment {
  id       Int     @id @default(autoincrement())
  url      String
  fileName String
  taskId   Int
  task     Task    @relation(fields: [taskId], references: [id])
  uploadedAt DateTime @default(now())
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  userId    Int
  timestamp DateTime @default(now())
  details   String
  user      User     @relation(fields: [userId], references: [id])
}
